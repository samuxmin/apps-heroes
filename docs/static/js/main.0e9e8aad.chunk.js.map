{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","hooks/useForm.js","component/login/LoginScreen.js","routers/PrivateRoute.js","data/heroes.js","component/heroes/HeroCard.js","component/heroes/HeroList.js","selectors/getHeroesByPublisher.js","component/dc/DcScreen.js","component/heroes/HeroScreen.js","selectors/getHeroById.js","component/main/AllHeroes.js","component/marvel/MarvelScreen.js","component/search/SearchScreen.js","component/ui/Navbar.js","routers/DashboardRoutes.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","history","dispatch","useContext","username","password","lastPath","localStorage","getItem","console","log","className","for","placeholder","autoComplete","onChange","onClick","replace","PrivateRoute","isAuth","Component","component","rest","location","pathname","search","setItem","props","to","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","src","alt","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcScreen","HeroScreen","heroeId","useParams","find","length","push","goBack","AllHeroes","MarvelScreen","SearchScreen","queryString","parse","useLocation","q","heroesFiltered","toLowerCase","onSubmit","e","preventDefault","Navbar","user","activeclassname","exact","DashboardRoutes","path","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e9e8aad.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext();","export const types = {\n    login: '[auth] login',\n    logout:'[auth] logout'\n}","import { types } from \"../types/types\";\n\n// const state = {\n//     name:'Samuel',\n//     logged:false\n// }\n\nexport const authReducer = (state = {}, action) => {\n   \n    switch (action.type) {\n        case types.login:\n            return{\n                ...action.payload, \n                logged:true\n            }\n        case types.logout:\n            return{\n                logged:false\n            }\n\n        default:\n            return state;\n    }\n}\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}\n","import React, { useContext } from 'react'\nimport { AuthContext } from '../../auth/AuthContext'\nimport { useForm } from '../../hooks/useForm'\nimport { types } from '../../types/types'\nimport './login.css'\n\nexport const LoginScreen = ({history}) => {\n    const{dispatch}=useContext(AuthContext)\n    const [{username, password}, handleInputChange] = useForm({username:'', password:''})\n    const action = {\n        payload:{name:username},\n        type:types.login\n}\n    const lastPath = localStorage.getItem('lastPath') || '/';\n\n    const handleLogin = () => {\n        dispatch(action)\n        history.replace(lastPath)\n    }\n    console.log(username)\n    return (\n        <div className=\"app\">\n            <h1>Login Screen</h1>\n            <hr />\n            <label for='username'><b>Username</b></label>\n            <input \n                className=\"login-input\"\n                type=\"text\" \n                placeholder='Username here...' \n                name=\"username\"\n                autoComplete=\"off\"\n                value={username} \n                onChange={handleInputChange}/><br/>\n            <label for='password'><b>Password</b></label>\n            <input\n                className=\"login-input\"\n                type=\"password\" \n                placeholder='Password here...' \n                name=\"password\" value={password} \n                onChange={handleInputChange}/>\n            <p>(Cualquer contraseña es valida)</p>\n            <button \n                className=\"btn btn-login\"\n                onClick={handleLogin}\n                >Login\n            </button>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Route,Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nexport const PrivateRoute = ({isAuth, component:Component,...rest\n    }) => {\n    const lastPath = rest.location.pathname + rest.location.search || rest.location.pathname\n    localStorage.setItem('lastPath', lastPath);\n\n    return (\n        <Route {...rest} \n            component={(props)=>(\n                (isAuth)\n                    ?(<Component {...props}/>)\n                    :(<Redirect to='/login' />)\n\n                )}\n            />\n        )\n}\nPrivateRoute.propTypes = {\n    isAuth: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","export const heroes = [\n    {\n        'id': 'dc-batman',\n        'superhero':'Batman', \n        'publisher':'DC Comics', \n        'alter_ego':'Bruce Wayne',\n        'first_appearance':'Detective Comics #27',\n        'characters':'Bruce Wayne'\n    },\n    {\n        'id': 'dc-superman',\n        'superhero':'Superman', \n        'publisher':'DC Comics', \n        'alter_ego':'Kal-El',\n        'first_appearance':'Action Comics #1',\n        'characters':'Kal-El'\n    },\n    {\n        'id': 'dc-flash',\n        'superhero':'Flash', \n        'publisher':'DC Comics', \n        'alter_ego':'Jay Garrick',\n        'first_appearance':'Flash Comics #1',\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\n    },\n    {\n        'id': 'dc-green',\n        'superhero':'Green Lantern', \n        'publisher':'DC Comics', \n        'alter_ego':'Alan Scott',\n        'first_appearance':'All-American Comics #16',\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\n    },\n    {\n        'id': 'dc-arrow',\n        'superhero':'Green Arrow', \n        'publisher':'DC Comics', \n        'alter_ego':'Oliver Queen',\n        'first_appearance':'More Fun Comics #73',\n        'characters':'Oliver Queen'\n    },\n    {\n        'id': 'dc-wonder',\n        'superhero':'Wonder Woman', \n        'publisher':'DC Comics', \n        'alter_ego':'Princess Diana',\n        'first_appearance':'All Star Comics #8',\n        'characters':'Princess Diana'\n    },\n    {\n        'id': 'dc-martian',\n        'superhero':'Martian Manhunter', \n        'publisher':'DC Comics', \n        'alter_ego':'J\\'onn J\\'onzz',\n        'first_appearance':'Detective Comics #225',\n        'characters':'Martian Manhunter'\n    },\n    {\n        'id': 'dc-robin',\n        'superhero':'Robin/Nightwing', \n        'publisher':'DC Comics', \n        'alter_ego':'Dick Grayson',\n        'first_appearance':'Detective Comics #38',\n        'characters':'Dick Grayson'\n    },\n    {\n        'id': 'dc-blue',\n        'superhero':'Blue Beetle', \n        'publisher':'DC Comics', \n        'alter_ego':'Dan Garret',\n        'first_appearance':'Mystery Men Comics #1',\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\n    },\n    {\n        'id': 'dc-black',\n        'superhero':'Black Canary', \n        'publisher':'DC Comics', \n        'alter_ego':'Dinah Drake',\n        'first_appearance':'Flash Comics #86',\n        'characters':'Dinah Drake, Dinah Lance'\n    },\n    {\n        'id': 'marvel-spider',\n        'superhero':'Spider Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Peter Parker',\n        'first_appearance':'Amazing Fantasy #15',\n        'characters':'Peter Parker'\n    },\n    {\n        'id': 'marvel-captain',\n        'superhero':'Captain America', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Steve Rogers',\n        'first_appearance':'Captain America Comics #1',\n        'characters':'Steve Rogers'\n    },\n    {\n        'id': 'marvel-iron',\n        'superhero':'Iron Man', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Tony Stark',\n        'first_appearance':'Tales of Suspense #39',\n        'characters':'Tony Stark'\n    },\n    {\n        'id': 'marvel-thor',\n        'superhero':'Thor', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Thor Odinson',\n        'first_appearance':'Journey into Myster #83',\n        'characters':'Thor Odinson'\n    },\n    {\n        'id': 'marvel-hulk',\n        'superhero':'Hulk', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Bruce Banner',\n        'first_appearance':'The Incredible Hulk #1',\n        'characters':'Bruce Banner'\n    },\n    {\n        'id': 'marvel-wolverine',\n        'superhero':'Wolverine', \n        'publisher':'Marvel Comics', \n        'alter_ego':'James Howlett',\n        'first_appearance':'The Incredible Hulk #180',\n        'characters':'James Howlett'\n    },\n    {\n        'id': 'marvel-daredevil',\n        'superhero':'Daredevil', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Matthew Michael Murdock',\n        'first_appearance':'Daredevil #1',\n        'characters':'Matthew Michael Murdock'\n    },\n    {\n        'id': 'marvel-hawkeye',\n        'superhero':'Hawkeye', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Clinton Francis Barton',\n        'first_appearance':'Tales of Suspense #57',\n        'characters':'Clinton Francis Barton'\n    },\n    {\n        'id': 'marvel-cyclops',\n        'superhero':'Cyclops', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Scott Summers',\n        'first_appearance':'X-Men #1',\n        'characters':'Scott Summers'\n    },\n    {\n        'id': 'marvel-silver',\n        'superhero':'Silver Surfer', \n        'publisher':'Marvel Comics', \n        'alter_ego':'Norrin Radd',\n        'first_appearance':'The Fantastic Four #48',\n        'characters':'Norrin Radd'\n    }\n]","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const HeroCard = ({\n    id,\n    superhero,\n    alter_ego,\n    first_appearance,\n    characters\n}) => {\n    return (\n        <div className=\"card-container\">\n            <div className=\"card\">\n                <div className=\"img-container\">\n                    <img src={`./assets/heroes/${ id }.jpg`} alt={superhero} />\n                </div>\n                <div className=\"card-text\">\n                    <h3>{superhero}</h3><br/>\n                    <p>{alter_ego}</p><br/>\n                    {\n                    (alter_ego !== characters)\n                    && <p>{characters}</p>\n                    }\n                <small>{first_appearance}</small><br/>\n                    <Link className=\"btn\" to={`./hero/${id}`}>Mas...</Link>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n","import React, { useMemo } from 'react'\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\nimport { HeroCard } from './HeroCard'\n\nexport const HeroList = ({publisher}) => {\n\n    const heroes = useMemo(() => getHeroesByPublisher(publisher)\n    , [publisher])\n\n    return (\n        <div className=\"cards-container animate__animated animate__fadeIn\">\n           {\n               heroes.map(hero => (\n                   <HeroCard\n                   key={hero.id}\n                       {...hero}>\n                   </HeroCard>\n               ))\n           } \n        </div>\n    )\n}\n","import { heroes } from \"../data/heroes\";\n\nexport const getHeroesByPublisher = (publisher) =>{\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\n\n    if(publisher === ''){return heroes}\n    if(!validPublishers.includes( publisher ) ) {\n        throw new Error(`Publisher ${publisher} no es correcto`)\n    }\n    return heroes.filter(hero => hero.publisher === publisher);\n}","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\n\nexport const DcScreen = () => {\n    return (\n        <div>\n            <h1>DC Screen</h1>\n            <hr />\n            <HeroList publisher='DC Comics'/>\n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport { getHeroById } from '../../selectors/getHeroById';\n\nexport const HeroScreen = ({ history }) => {\n\n    const {heroeId} = useParams();\n    const hero = useMemo(() =>  getHeroById(heroeId) , [heroeId]);\n   \n    if(!hero){\n        return <Redirect to='/' />\n    }\n    const {\n        superhero,\n        publisher,\n        alter_ego,\n        first_appearance,\n        characters\n    } = hero;\n\n    const handleReturn = () =>{\n        if(history.length <=2){\n            history.push('/')\n        }else{\n            history.goBack()\n        }\n    }\n    return (\n    <div className=\"animate__animated animate__bounceIn heroscreen\">\n        <div img-container>\n            <h1>{superhero}</h1>\n            <img className=\"superheroe\"\n                src={`../assets/heroes/${heroeId}.jpg`}\n                alt={superhero}\n            />\n        </div>\n        <div className=\"hero-text\">\n            <h3>{superhero}</h3>\n            <ul>\n                <li><b>Alter ego: {alter_ego}</b></li>\n                <li><b>Publisher: {publisher}</b></li>\n                <li><b>First appearance: {first_appearance}</b></li>\n            </ul>\n            <h5>Characters:</h5>\n            <p>{characters}</p>\n\n            <button className=\"btn\"\n                onClick={handleReturn}\n            >Return</button>\n        </div>\n        </div>\n    )\n}\n","import { heroes } from \"../data/heroes\";\n\nexport const getHeroById = (id) =>{\n    return heroes.find(hero => hero.id === id);\n}","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\nexport const AllHeroes = () => {\n    return (\n        <div>\n            <h1>Heroes</h1>\n            <hr />\n            <HeroList publisher=''/>\n        </div>\n    )\n}\n","import React from 'react'\nimport { HeroList } from '../heroes/HeroList'\nexport const MarvelScreen = () => {\n    return (\n        <div>\n            <h1>Marvel Screen</h1>\n            <hr />\n            <HeroList publisher='Marvel Comics'/>\n        </div>\n    )\n}\n","import React, { useMemo } from 'react'\nimport queryString from 'query-string'\nimport { useLocation } from 'react-router-dom';\nimport {heroes} from '../../data/heroes.js'\nimport { useForm } from '../../hooks/useForm.js';\nimport { HeroCard } from '../heroes/HeroCard.js';\n\nexport const SearchScreen = ({history}) => {\n\n\n    const {q = ''} = queryString.parse(useLocation().search)\n\n    const [ values, handleInputChange] = useForm({search:q})\n    const { search } = values\n    \n    const getHeroesByName = ( name ) => {\n        if(!name){return []}\n        \n        name = name.toLowerCase();\n        return heroes.filter(hero=> hero.superhero.toLowerCase().includes(name))\n    }\n    const heroesFiltered = useMemo(()=>getHeroesByName(q),[q]);\n    \n\n    const handleSearch = (e) =>{\n        e.preventDefault()\n        history.push(`?q=${search}`)\n    }\n    return (\n        <>\n            <h1>Search</h1>\n            <hr />\n            <div className=\"search-container\">\n                <div className=\"search\">\n                    <hr />\n                    <form onSubmit={handleSearch}>\n                        <input \n                            name='search'\n                            type='text'\n                            placeholder='Find your hero'\n                            className='search-input'\n                            onChange={handleInputChange}\n                            value={search}\n                            autoComplete='off'\n                            />\n                            <button\n                                type='submit'\n                                className='btn btn-search'\n                            >Search...</button>\n                    </form>\n                </div>\n                <div className=\"search-results\">\n                    <h2>Results</h2>\n                    <hr />\n                    {(q==='') \n                    && \n                    <div className=\"aviso\"\n                        >Search a hero\n                    </div>}\n                    {\n                        (q!==\"\" && heroesFiltered.length=== 0) && <div className=\"aviso\">No hero found with {q}</div>\n                    }\n                    {\n                        heroesFiltered.map(hero =>(<HeroCard key={hero.id} {...hero}/>))\n                    }\n                </div>\n            </div>\n        </>\n    )\n}\n","\n\nimport React, { useContext } from 'react'\nimport { Link, NavLink } from 'react-router-dom'\nimport { AuthContext } from '../../auth/AuthContext'\nimport { types } from '../../types/types'\n\nexport const Navbar = () => {\n\n    const {user, dispatch} = useContext(AuthContext)\n\n    const handleLogout = () => {\n        dispatch({type:types.logout})\n    }\n    return (\n        <nav className=\"navbar-container\">\n            \n            <Link \n                className=\"nav-item\" \n                to=\"/\"\n            >\n                ALL\n            </Link>\n\n                    <NavLink \n                        activeclassname=\"active\"\n                        className=\"nav-item\" \n                        exact\n                        to=\"/marvel\"\n                    >\n                        MARVEL\n                    </NavLink>\n\n                    <NavLink \n                        activeclassname=\"active\"\n                        className=\"nav-item\" \n                        exact\n                        to=\"/dc\"\n                    >\n                        DC\n                    </NavLink>\n\n                    <NavLink\n                        activeclassname=\"active\"\n                        className=\"nav-item\" \n                        exact\n                        to=\"/search\">\n                        Search\n                    </NavLink>\n                    <button\n                        activeclassname=\"active\"\n                        className=\"nav-item right logout-btn\" \n                        onClick={handleLogout}\n                    >\n                        Logout\n                    </button>\n                    <span className=\"nav-item right\">{user.name}</span>\n        </nav>\n    )\n}","import React from 'react'\nimport { Switch,Route, Redirect } from 'react-router-dom'\nimport { DcScreen } from '../component/dc/DcScreen'\nimport { HeroScreen } from '../component/heroes/HeroScreen'\nimport { AllHeroes } from '../component/main/AllHeroes'\nimport { MarvelScreen } from '../component/marvel/MarvelScreen'\nimport { SearchScreen } from '../component/search/SearchScreen'\nimport { Navbar } from '../component/ui/Navbar'\n\nexport const DashboardRoutes = () => {\n    return (\n        <>\n            <Navbar/>\n            <div className='app'>\n                <Switch>\n                    <Route exact path='/' component={AllHeroes}/>\n                    <Route exact path='/search' component={SearchScreen} />\n                    <Route exact path=\"/marvel\" component={ MarvelScreen }/>\n                    <Route exact path=\"/hero/:heroeId\" component={ HeroScreen }/>\n                    <Route exact path=\"/dc\" component={ DcScreen }/>\n\n                    <Redirect to='/marvel' />\n                </Switch>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({isAuth, component:Component,...rest\n}) => {\n    \n    return (\n        <Route {...rest} \n            component={(props)=>(\n                (!isAuth)\n                    ?(<Component {...props}/>)\n                    :(<Redirect to='/' />)\n\n                )}\n            />\n        )\n}\nPublicRoute.propTypes = {\n    isAuth: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, {useContext} from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\";\nimport { LoginScreen } from '../component/login/LoginScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { AuthContext } from '../auth/AuthContext';\nimport {DashboardRoutes} from './DashboardRoutes'\nimport { PublicRoute } from './PublicRoute';\nexport const AppRouter = () => {\n    const {user} = useContext(AuthContext)\n\n    return(\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuth={user.logged}/>\n                    <PrivateRoute \n                        isAuth={user.logged} \n                        path=\"/\" \n                        component={DashboardRoutes}\n                        />\n                </Switch>\n            </div>\n    </Router>\n\n    )\n}\n","import React, { useEffect, useReducer } from 'react'\nimport { AuthContext } from './auth/AuthContext'\nimport { authReducer } from './auth/authReducer'\nimport { AppRouter } from './routers/AppRouter'\n\n\nconst init = () => {\n    return JSON.parse(localStorage.getItem('user')) || {logged:false}\n}\nexport const HeroesApp = () => {\n\n    const [user, dispatch] = useReducer(authReducer, {}, init);\n    \n    useEffect(() => {\n        localStorage.setItem('user', JSON.stringify(user))\n    }, [user]);\n\n    return (\n    <AuthContext.Provider value={{user, dispatch}}>\n        <AppRouter/>\n    </AuthContext.Provider>\n\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n  <HeroesApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}